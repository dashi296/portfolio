{"version":3,"sources":["components/Header.tsx","containers/Header.tsx","components/TopNav.tsx","menus/actions.ts","menus/constants.ts","containers/TopNav.tsx","components/atoms/RubyHighlighter.tsx","components/Editor.tsx","containers/Editor.tsx","components/Terminal.tsx","containers/Terminal.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","data/editor.ts","data/terminal.ts","menus/reducers.ts","store.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","width","height","backgroundColor","alignItems","buttons","title","color","textAlign","roundButton","borderRadius","margin","RoundButton","_ref","classes","react_default","a","createElement","className","style","background","Header","_ref2","Header_RoundButton","concat","withRouter","connect","state","menu","menuName","components_Header","menuList","Object","defineProperty","overflowY","breakpoints","down","wsMenuItem","fontSize","paddingTop","paddingBottom","&:hover","menuItem","paddingLeft","spacing","&$selected","menuItemNested","menuItemJPText","fontWeight","menuItemText","fontFamily","folderIcon","icons","minWidth","paddingRight","nested","selected","hover","MenuItemText","props","ListItemText","assign","primary","children","TopNav","setMenu","_useState","useState","_useState2","slicedToArray","wsOpen","setWSOpen","_useState3","_useState4","pfOpen","setPfOpen","_useState5","_useState6","pfSelected","setPfSelected","List","aria-label","padding","ListItem","button","onClick","ListItemIcon","ExpandMore_default","ChevronRight_default","Collapse","in","timeout","unmountOnExit","map","isSelected","key","TopNav_MenuItemText","params","type","payload","dispatch","bindActionCreators","useEffect","components_TopNav","RubyHighlighter","highlightTheme","monokaiSublime","default_highlight","language","customStyle","lineHeight","wrapLines","lineNumberContainerStyle","lineNumberStyle","breadcrumbs","beckgroundColor","arrow","Breadcrumbs","ArrowForwardIos_default","Editor","code","Editor_Breadcrumbs","atoms_RubyHighlighter","showLineNumbers","_state$menu","editorCode","components_Editor","borderTop","tabs","minHeight","tab","borderBottom","terminal","maxHeight","typist","position","&:after","content","top","right","verticalAlign","WebkitAnimation","animation","result","TerminalInput","isSetting","settingMenuName","updateTerminal","Fragment","Typist_default","avgTypingDelay","cursor","show","onTypingDone","Delay","ms","Terminal","prevTerminalText","menuResult","scroller","scrollTo","delay","containerId","disabled","id","dangerouslySetInnerHTML","__html","Terminal_TerminalInput","modules","name","components_Terminal","justifyContent","leftItems","alignSelf","leftItem","marginRight","rightItems","marginLeft","rightItem","Footer","index_esm","App","Grid","container","item","xs","containers_Header","sm","containers_TopNav","Hidden","xsDown","containers_Editor","containers_Terminal","components_Footer","Boolean","window","location","hostname","match","EditorData","profile","skills","products","blog","contact","TerminalData","blogs","initialState","menuReducer","arguments","length","undefined","action","objectSpread","execCode","trim","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","ReactDOM","render","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0b0bb81.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      width: '100vw',\n      height: '2.5vh',\n      backgroundColor: '#272727',\n      alignItems: 'center',\n    },\n    buttons: {\n      display: 'flex',\n    },\n    title: {\n      width: '100%',\n      color: '#818181',\n      textAlign: 'center',\n    },\n    roundButton: {\n      width: 10,\n      height: 10,\n      borderRadius: '50%',\n      margin: 3,\n    },\n  }),\n);\n\ninterface RoundButtonProps {\n  color: string;\n}\n\nconst RoundButton: FC<RoundButtonProps> = ({ color }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.roundButton} style={{ background: color }}></div>\n  );\n};\n\nexport interface HeaderProps {\n  title: string;\n}\n\nconst Header: FC<HeaderProps> = ({ title }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.buttons}>\n        <RoundButton color=\"#F04040\" />\n        <RoundButton color=\"#FDB024\" />\n        <RoundButton color=\"#29C833\" />\n      </div>\n      <div className={classes.title}>\n        {title ? `${title}.rb` : \"dashi's portfolio\"}\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport Header, { HeaderProps } from '../components/Header';\n\nimport { AppState } from '../store';\n\ninterface StateProps {\n  title: string;\n}\n\n// interface DispatchProps {\n//\n// }\n\ntype EnhancedHeaderProps = HeaderProps & StateProps;\n// DispatchProps &\n// RouteComponentProps<{ menuName: string }>;\n\nconst mapStateToProps = (state: AppState): StateProps => {\n  const { menuName } = state.menu;\n\n  return {\n    title: menuName,\n  };\n};\n\n// const mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\n//  bindActionCreators({}, dispatch);\n\nconst HeaderContainer: FC<EnhancedHeaderProps> = ({ title }) => {\n  return <Header title={title} />;\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    //mapDispatchToProps,\n  )(HeaderContainer),\n);\n","import React, { FC, useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText, { ListItemTextProps } from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport Divider from '@material-ui/core/Divider';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nconst menuList: string[] = [\"profile\", \"skills\", \"products\", \"contact\"];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: '95vh',\n      backgroundColor: '#1C1C1C',\n      overflowY: 'scroll',\n      [theme.breakpoints.down('xs')]: {\n        height: '25vh',\n      }\n    },\n    wsMenuItem: {\n      fontSize: '1.0rem',\n      paddingTop: 0,\n      paddingBottom: 0,\n      backgroundColor: '#2A2A2A',\n      '&:hover': {\n        backgroundColor: '#2A2A2A',\n      },\n    },\n    menuItem: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingLeft: theme.spacing(4),\n      '&:hover': {\n        backgroundColor: '#202222',\n      },\n      '&$selected': {\n        backgroundColor: '#15385C',\n        '&:hover': {\n          backgroundColor: '#15385C',\n        }\n      },\n    },\n    menuItemNested: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      paddingLeft: theme.spacing(6),\n      '&:hover': {\n        backgroundColor: '#202222',\n      },\n      '&$selected': {\n        backgroundColor: '#15385C',\n        '&:hover': {\n          backgroundColor: '#15385C',\n        }\n      },\n    },\n    menuItemJPText: {\n      fontWeight: 'bold',\n      color: '#BFC0BF',\n    },\n    menuItemText: {\n      fontSize: '1.1rem',\n      fontWeight: 'bold',\n      fontFamily: 'Monaco, Courier New, monospace',\n      color: '#BFC0BF',\n    },\n    folderIcon: {\n      color: '#BFC0BF',\n    },\n    icons: {\n      minWidth: 5,\n      paddingRight: 5,\n    },\n    nested: {\n      paddingLeft: theme.spacing(6),\n    },\n    selected: {\n\n    },\n    hover: {\n    }\n  }),\n);\n\nconst MenuItemText = (props: ListItemTextProps) => {\n  const classes = useStyles();\n  return (\n    <ListItemText {...props} primary={<div className={classes.menuItemText}>{props.children}</div>} />\n  )\n}\n\nexport interface TopNavProps {\n  menuName: string;\n  setMenu: (menuName: string) => void;\n}\n\nconst TopNav: FC<TopNavProps> = ({\n  menuName,\n  setMenu,\n}) => {\n  const classes = useStyles();\n\n  const [wsOpen, setWSOpen] = useState(true);\n  const [pfOpen, setPfOpen] = useState(true);\n  const [pfSelected, setPfSelected] = useState(false);\n\n  const handleWSClick = () => {\n    setWSOpen(!wsOpen);\n    setPfSelected(false);\n  }\n\n  const handlePfClick = () => {\n    setPfOpen(!pfOpen);\n    setPfSelected(true);\n  }\n\n  const handleFileClick = (menuName: string) => {\n    setMenu(menuName);\n    setPfSelected(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <List aria-label=\"workspace-nav\" style={{ padding: 0 }}>\n        <ListItem>\n          <ListItemText primary={<div className={classes.menuItemJPText}>メニュー</div>} />\n        </ListItem>\n        <ListItem button className={classes.wsMenuItem} onClick={() => handleWSClick()}>\n          <ListItemIcon className={classes.icons}>\n            {\n              wsOpen ?\n                <ExpandMoreIcon fontSize=\"small\" className={classes.folderIcon} />\n                :\n                <ChevronRightIcon fontSize=\"small\" className={classes.folderIcon} />\n            }\n          </ListItemIcon>\n          <ListItemText primary={<div className={classes.menuItemJPText}>ワークスペース</div>} />\n        </ListItem>\n      </List>\n      <Collapse in={wsOpen} timeout={0} unmountOnExit>\n        <List aria-label=\"main-nav\" style={{ padding: 0 }}>\n          <ListItem button selected={pfSelected} classes={{ root: classes.menuItem, selected: classes.selected }} onClick={() => handlePfClick()}>\n            <ListItemIcon className={classes.icons}>\n              {\n                pfOpen ?\n                  <ExpandMoreIcon fontSize=\"small\" className={classes.folderIcon} />\n                  :\n                  <ChevronRightIcon fontSize=\"small\" className={classes.folderIcon} />\n              }\n            </ListItemIcon>\n            <ListItemText primary={<div className={classes.menuItemText}>portfolio</div>} />\n          </ListItem>\n        </List>\n        <Collapse in={pfOpen} timeout={0} unmountOnExit>\n          <List aria-label=\"rb-list\" style={{ padding: 0 }}>\n            {\n              menuList.map(menu => {\n                const isSelected = menu == menuName;\n                return (\n                  <ListItem key={menu} button onClick={() => handleFileClick(menu)} selected={(!pfSelected && isSelected)} classes={{ root: classes.menuItemNested, selected: classes.selected }} >\n                    <span className=\"ruby-icon\" />\n                    <MenuItemText children={`${menu}.rb`} />\n                  </ListItem>)\n              })\n            }\n          </List>\n        </Collapse>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default TopNav;\n","import * as ActionType from './constants';\n\nexport interface ISetMenuParams {\n  menuName: string;\n}\n\nexport const setMenu = (params: ISetMenuParams) => ({\n  type: ActionType.SET_MENU,\n  payload: { params }\n});\n\n\nexport interface IUpdateTerminalParams {\n  menuName: string;\n}\n\nexport const updateTerminal = (params: IUpdateTerminalParams) => ({\n  type: ActionType.UPDATE_TERMINAL,\n  payload: { params }\n});\n\nexport type MenuAction =\n  ReturnType<typeof setMenu>\n  | ReturnType<typeof updateTerminal>\n  ;\n","export const SET_MENU = 'SET_MENU';\nexport const UPDATE_TERMINAL = 'UPDATE_TERMINAL';\n","import React, { FC, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport TopNav, { TopNavProps } from '../components/TopNav';\n//import { IMenuState } from '../menus/reducers';\nimport { setMenu } from '../menus/actions';\n\nimport { AppState } from '../store';\n\ninterface StateProps {\n  menuName: string;\n}\n\ninterface DispatchProps {\n  setMenu: (menuName: string) => void;\n}\n\ntype EnhancedTopNavProps = TopNavProps & StateProps & DispatchProps /*& RouteComponentProps<{ menuName: string }>*/;\n\nconst mapStateToProps = (state: AppState): StateProps => {\n  const { menuName } = state.menu;\n  return {\n    menuName: menuName,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\n  bindActionCreators(\n    {\n      setMenu: (menuName: string) => setMenu({ menuName }),\n    },\n    dispatch,\n  );\n\nconst TopNavContainer: FC<EnhancedTopNavProps> = ({\n  menuName,\n  setMenu,\n  //match,\n}) => {\n  //const { menuName } = match.params;\n\n  useEffect(() => {\n    !menuName && setMenu('profile');\n  })\n\n  return (\n    <TopNav menuName={menuName} setMenu={setMenu} />\n  );\n};\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(TopNavContainer),\n);\n","import React from 'react';\nimport SyntaxHighlighter, { SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport { monokaiSublime } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst RubyHighlighter = (props: SyntaxHighlighterProps) => {\n\n  const highlightTheme = monokaiSublime;\n  return (\n    <SyntaxHighlighter\n      {...props}\n      language=\"ruby\"\n      style={highlightTheme}\n      customStyle={{ display: 'flex', lineHeight: 1.5, backgroundColor: '#171717' }}\n      wrapLines={true}\n      lineNumberContainerStyle={{ textAlign: 'right', paddingRight: 15, width: 40 }}\n      lineNumberStyle={{ color: '#727272' }}\n    />\n  );\n}\n\nexport default RubyHighlighter;\n","import React, { FC } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport RubyHighlighter from './atoms/RubyHighlighter';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: 'white',\n      backgroundColor: '#171717',\n      height: '25vh',\n      padding: '1.0em',\n      overflowY: 'scroll',\n    },\n    breadcrumbs: {\n      display: 'flex',\n      fontSize: '1.1rem',\n      fontWeight: 'bold',\n      fontFamily: 'Monaco, Courier New, monospace',\n      color: '#989998',\n      beckgroundColor: '#171717',\n      height: 15,\n    },\n    arrow: {\n      margin: '0 5px',\n    }\n  }),\n);\n\ninterface IBreadcrumbsProps {\n  menuName?: string;\n}\nconst Breadcrumbs: FC<IBreadcrumbsProps> = ({\n  menuName,\n}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.breadcrumbs}>\n      portfolio\n      <ArrowForwardIosIcon className={classes.arrow} fontSize=\"small\" /> <span className=\"ruby-icon\" />{menuName}.rb\n    </div>\n  )\n}\n\nexport interface EditorProps {\n  menuName: string;\n  code: string;\n}\n\nconst Editor: FC<EditorProps> = ({\n  menuName,\n  code,\n}) => {\n  const classes = useStyles();;\n\n  return (\n    <div className={classes.root}>\n      <Breadcrumbs menuName={menuName} />\n      <RubyHighlighter showLineNumbers={true}>\n        {code}\n      </RubyHighlighter>\n    </div>\n  );\n};\n\nexport default Editor;\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport Editor, { EditorProps } from '../components/Editor';\nimport { setMenu } from '../menus/actions';\n\nimport { AppState } from '../store';\n\ninterface StateProps {\n  menuName: string;\n  code: string;\n}\n\ninterface DispatchProps {\n  setMenu: (menuName: string) => void;\n}\n\ntype EnhancedEditorProps = EditorProps & StateProps & DispatchProps & RouteComponentProps<{ menuName: string }>;\n\nconst mapStateToProps = (state: AppState): StateProps => {\n  const { menuName, editorCode } = state.menu;\n  return {\n    menuName: menuName,\n    code: editorCode,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\n  bindActionCreators(\n    {\n      setMenu: (menuName: string) => setMenu({ menuName }),\n    },\n    dispatch,\n  );\n\nconst EditorContainer: FC<EnhancedEditorProps> = ({\n  code,\n  menuName,\n  setMenu,\n  //match,\n}) => {\n  //const { menuName } = match.params;\n\n  return (\n    <Editor menuName={menuName} code={code} />\n  );\n};\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(EditorContainer),\n);\n","import React, { FC, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  withStyles,\n} from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText, {\n  ListItemTextProps,\n} from '@material-ui/core/ListItemText';\n\nimport Typist from 'react-typist';\nimport 'react-typist/dist/Typist.css';\n\nimport { Element, scroller } from 'react-scroll';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: '#ffffff',\n      backgroundColor: '#171717',\n      height: '70vh',\n      padding: '0 1em',\n      borderTop: 'solid 1px #323232',\n    },\n    tabs: {\n      display: 'flex',\n      height: '5vh',\n      minHeight: '5vh',\n    },\n    tab: {\n      minWidth: 0,\n      width: 'auto',\n      color: '#E1E1E1',\n      fontFamily: 'sans-serif, arial',\n      fontWeight: 'bold',\n      fontSize: '1.1rem',\n      padding: '7px 0',\n      margin: '0 7px',\n      minHeight: 'auto',\n      '&$selected': {\n        color: '#E1E1E1',\n        backgroundColor: '#171717',\n        borderBottom: '1px solid #323232',\n        '&:hover': {\n          backgroundColor: '#171717',\n        },\n      },\n      '&:hover': {\n        color: '#E1E1E1',\n      },\n    },\n    terminal: {\n      padding: '0.5em',\n      overflowY: 'scroll',\n      height: '65vh',\n      maxHeight: '65vh',\n    },\n    typist: {\n      display: 'inline-block',\n      position: 'relative',\n      '&:after': {\n        content: '',\n        position: 'absolute',\n        top: 0,\n        right: -15,\n        display: 'inline-block',\n        backgroundColor: '#606060',\n        verticalAlign: 'top',\n        width: 10,\n        height: 24,\n        WebkitAnimation: 'blink 1s step-end infinite',\n        animation: 'blink 1s step-end infinite',\n      },\n    },\n    result: {\n      fontSize: '1.2rem',\n      fontFamily: 'monaco, Consolas, Lucida Console, monospace',\n    },\n    selected: {},\n    hover: {},\n  }),\n);\n\nexport interface TerminalProps {\n  isSetting: boolean;\n  settingMenuName: string;\n  prevTerminalText: string;\n  menuResult: string;\n  setMenu: (menuName: string) => void;\n  updateTerminal: (menuName: string) => void;\n}\n\nconst Terminal: FC<TerminalProps> = ({\n  isSetting,\n  settingMenuName,\n  prevTerminalText,\n  menuResult,\n  setMenu,\n  updateTerminal,\n}) => {\n  const classes = useStyles();\n\n  const TERMINAL_PHRASE = 'dashi-MBP:portfolio dashi$ ';\n\n  useEffect(() => {\n    scroller.scrollTo('terminalBottom', {\n      delay: 0,\n      containerId: 'terminal',\n    });\n  }, [prevTerminalText]);\n\n  return (\n    <div className={classes.root}>\n      <List className={classes.tabs}>\n        <ListItem\n          classes={{ root: classes.tab, selected: classes.selected }}\n          disabled\n        >\n          <ListItemText primary=\"問題\" />\n        </ListItem>\n        <ListItem\n          classes={{ root: classes.tab, selected: classes.selected }}\n          disabled\n        >\n          <ListItemText primary=\"出力\" />\n        </ListItem>\n        <ListItem\n          classes={{ root: classes.tab, selected: classes.selected }}\n          disabled\n        >\n          <ListItemText primary=\"デバッグコンソール\" />\n        </ListItem>\n        <ListItem\n          classes={{ root: classes.tab, selected: classes.selected }}\n          selected\n        >\n          <ListItemText primary=\"ターミナル\" />\n        </ListItem>\n      </List>\n\n      <div id=\"terminal\" className={classes.terminal}>\n        <pre\n          className={classes.result}\n          dangerouslySetInnerHTML={{ __html: prevTerminalText }}\n        />\n        {TERMINAL_PHRASE}\n\n        <TerminalInput\n          isSetting={isSetting}\n          settingMenuName={settingMenuName}\n          updateTerminal={updateTerminal}\n        />\n        <Element name=\"terminalBottom\" />\n      </div>\n    </div>\n  );\n};\n\ninterface TerminalInputProps {\n  isSetting: boolean;\n  settingMenuName: string;\n  updateTerminal: (menuName: string) => void;\n}\n\nconst TerminalInput: FC<TerminalInputProps> = ({\n  isSetting,\n  settingMenuName,\n  updateTerminal,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {isSetting ? (\n        <>\n          <Typist\n            className={classes.typist}\n            avgTypingDelay={20}\n            cursor={{ show: false }}\n            onTypingDone={() => updateTerminal(settingMenuName)}\n          >\n            <Typist.Delay ms={200} />\n            {`ruby ${settingMenuName}.rb`}\n          </Typist>\n          <div className=\"typing\" />\n        </>\n      ) : (\n        <div className=\"cursor\" />\n      )}\n    </>\n  );\n};\n\nexport default Terminal;\n","\nimport React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { RouteComponentProps, withRouter } from 'react-router';\n\nimport Terminal, { TerminalProps } from '../components/Terminal';\nimport { setMenu, updateTerminal } from '../menus/actions';\n\nimport { AppState } from '../store';\n\ninterface StateProps {\n  isSetting: boolean;\n  settingMenuName: string;\n  prevTerminalText: string;\n  menuResult: string;\n}\n\ninterface DispatchProps {\n  setMenu: (menuName: string) => void;\n  updateTerminal: (menuName: string) => void;\n}\n\ntype EnhancedTerminalProps = TerminalProps & StateProps & DispatchProps;\n\nconst mapStateToProps = (state: AppState): StateProps => {\n  const { isSetting, settingMenuName, prevTerminalText, menuResult } = state.menu;\n  return {\n    isSetting: isSetting,\n    settingMenuName: settingMenuName,\n    prevTerminalText: prevTerminalText,\n    menuResult: menuResult,\n  }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\n  bindActionCreators(\n    {\n      setMenu: (menuName: string) => setMenu({ menuName }),\n      updateTerminal: (menuName: string) => updateTerminal({ menuName }),\n    },\n    dispatch,\n  );\n\nconst TerminalContainer: FC<EnhancedTerminalProps> = ({\n  isSetting,\n  settingMenuName,\n  prevTerminalText,\n  menuResult,\n  setMenu,\n  updateTerminal,\n}) => {\n\n  return (\n    <Terminal\n      isSetting={isSetting}\n      settingMenuName={settingMenuName}\n      prevTerminalText={prevTerminalText}\n      menuResult={menuResult}\n      setMenu={setMenu}\n      updateTerminal={updateTerminal}\n    />\n  );\n};\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(TerminalContainer),\n);\n","import React, { FC } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n  FaCodeBranch as BranchIcon,\n  FaSyncAlt as SyncIcon,\n  FaTimesCircle as TimesIcon,\n  FaExclamationTriangle as ExclamationIcon,\n  FaBell as BellIcon,\n  FaSmile as SmileIcon,\n} from 'react-icons/fa';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      width: '100vw',\n      height: '2.5vh',\n      backgroundColor: '#2269BD',\n      fontFamily: 'Roman, arial ,Courier New, monospace',\n      fontWeight: 'bold',\n      color: '#FFFFFF',\n      justifyContent: 'flex-start',\n      paddingLeft: 10,\n      paddingRight: 10,\n    },\n    leftItems: {\n      display: 'flex',\n      alignSelf: 'center',\n    },\n    leftItem: {\n      marginRight: 10,\n    },\n    rightItems: {\n      display: 'flex',\n      alignSelf: 'center',\n      marginLeft: 'auto',\n    },\n    rightItem: {\n      marginLeft: 10,\n    },\n  }),\n);\n\n// export interface FooterProps { }\n\nconst Footer: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.leftItems}>\n        <div className={classes.leftItem}>\n          <BranchIcon />\n          master*\n        </div>\n        <div className={classes.leftItem}>\n          <SyncIcon />\n        </div>\n        <div className={classes.leftItem}>\n          <TimesIcon /> 0\n        </div>\n        <div className={classes.leftItem}>\n          <ExclamationIcon /> 0\n        </div>\n      </div>\n      <div className={classes.rightItems}>\n        <div className={classes.rightItem}>UTF-8</div>\n        <div className={classes.rightItem}>LF</div>\n        <div className={classes.rightItem}>Ruby</div>\n        <div className={classes.rightItem}>\n          <SmileIcon />\n        </div>\n        <div className={classes.rightItem}>\n          <BellIcon />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { FC } from 'react';\nimport './App.css';\n\n// import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Hidden from '@material-ui/core/Hidden';\nimport Header from './containers/Header';\nimport TopNav from './containers/TopNav';\nimport Editor from './containers/Editor';\nimport Terminal from './containers/Terminal';\nimport Footer from './components/Footer';\n\nconst App: FC = () => {\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Header />\n      </Grid>\n      <Grid container>\n        <Grid item xs={12} sm={2}>\n          <TopNav />\n        </Grid>\n        <Grid item xs={12} sm={10}>\n          <Hidden xsDown>\n            <Editor />\n          </Hidden>\n          <Terminal />\n        </Grid>\n        <Footer />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const EditorData: Record<string, string> = {\n  profile: `require \"catpix\"\n\n  class Person\n\n    attr_accessor :name,\n                  :age,\n                  :hobbies,\n                  :favorites,\n                  :skills,\n                  :message\n\n    def initialize(name, age)\n      @name = name\n      @age = age\n      @hobbies = []\n      @favorites = []\n      @skills = []\n      @message = \"\"\n    end\n\n    def introduction\n      divider = \"=\" * 50\n      text = <<TEXT\n      #{divider}\n      #{profile_image}\n      NAME      : #{name}\n      AGE       : #{age}\n      FAVORITES : #{favorites}\n      HOBBIES   : #{hobbies}\n      MESSAGE   : #{message}\n      #{divider}\n      TEXT\n\n      puts text\n    end\n\n    def grow(years = 1)\n      self.age += years\n    end\n\n    private\n      def profile_image\n        Catpix::print_image '/Users/dashi/pictures/profile.png',\n          limit_x: 0.5,\n          limit_y: 0,\n          resolution: \"high\"\n      end\n  end\n\n  # HISTORY\n  # -1989\n  me = Person.new(\"dashi\", 0)\n\n  # -1999\n  me.grow(10)\n  me.favorites.push(\"家族\")\n  me.favorites.push(\"ラーメン\")\n  me.favorites.push(\"焼肉\")\n\n  # -2008\n  me.grow(9)\n  me.hobbies.push(\"ギター\")\n  me.hobbies.push(\"ピアノ\")\n\n  # -2017\n  me.grow(9)\n  me.hobbies.push(\"ゲーム開発\")\n  me.favorites.push(\"プログラミング\")\n\n  # -2018\n  me.grow\n  me.hobbies.push(\"Webアプリ開発\")\n\n  # -2019\n  me.grow\n\n  # 自己紹介\n  me.introduction\n\n`,\n  skills: `\n  LANGUAGES = %i[HTML CSS Ruby Javascript Typescript jQuery React C# PHP]\n  FRAMEWORKS = %i[Rails Unity CakePHP]\n\n  skills = {\n    HTML: 7,\n    CSS: 7,\n    Ruby: 7,\n    Javascript: 6,\n    Typescript: 6,\n    React: 5,\n    jQuery: 4,\n    :\"C#\" => 4,\n    PHP: 4,\n    Rails: 6,\n    Unity: 4,\n    CakePHP: 2,\n  }\n\n  def skills_info(skills)\n    puts \"Language   Level(1~10)\"\n    LANGUAGES.each do |skill|\n      puts \"#{skill}  : #{\"+\" * skills[skill]}\"\n    end\n\n    puts \"Framework   Level(1~10)\"\n    FRAMEWORKS.each do |framework|\n      puts \"#{framework}  : #{\"+\" * skills[framework]}\"\n    end\n  end\n\n  skills_info(skills)\n\n  `,\n  products: `require \"catpix\"\n\n  class Product\n    attr_accessor :title, :image, :backend, :frontend, :description\n\n    def initialize(title:, image:, backend:, frontend:, description:)\n      @title = title\n      @image = image\n      @backend = backend\n      @frontend = frontend\n      @description = description\n    end\n\n    def display\n      text = <<-TEXT\n      #{print_image}\n      title: #{@title}\n      url: #{@url}\n      backend: #{@backend}\n      frontend: #{@frontend}\n      description: #{@description}\n      TEXT\n\n      puts text\n    end\n\n    private\n      def print_image\n        Catpix::print_image @image,\n          limit_x: 1.0,\n          limit_y: 0,\n          center_x: true,\n          center_y: true,\n          bg: \"white\",\n          bg_fill: true,\n          resolution: \"high\"\n      end\n\n  end\n\n  draftbox = Product.new(title: \"DraftBox\",\n    image: \"/Users/dashi/pictures/draftbox.png\",\n    backend: [\"Rails\", \"Heroku\"],\n    frontend: [\"jQuery\", \"Marked.js\"],\n    description: \"オンラインMarkdownメモサービス\")\n\n  twesume = Product.new(title: \"TWESUME ~ みんなのTwitter履歴書 ~\",\n    image: \"/Users/dashi/pictures/twesume.png\",\n    backend: [\"Rails\", \"Heroku\"],\n    frontend: [\"jQuery\", \"Bootstrap\", \"html2canvas\"],\n    description: \"ポートフォリオでアピールするTwitter転職支援サービス\")\n  products = [draftbox, twesume]\n\n  products.each do |product|\n    product.display\n  end\n  `,\n  blog: `blog code`,\n  contact: `divider = \"=\" * 50\nputs divider\nputs \"お問い合わせは Twitterアカウント(@dashi296) のDMへお願いいたします。\"\nputs divider\n`,\n};\n\nexport default EditorData;\n\n","const TerminalData: Record<string, string> = {\n  profile: `\n  ==================================================\n\n  <img class=\"profile-img\" src=\"./images/profile.png\" />\n  NAME    : dashi\n  AGE     : 30\n  HOBBIES : Webアプリ開発、ゲーム開発、ギター、ピアノ\n  FAVORITE: 家族、プログラミング、ラーメン\n  MESSAGE :\n  2017年2月頃から趣味でUnityでオンラインゲーム開発を始め、\n  モノづくりが好きになる。\n  2018年1月頃にWebアプリ開発に興味を持ち、Railsの勉強を始め、\n  2018年11月に初めてWebアプリ\n  『TWESUME ~みんなのTwitter履歴書~』をリリース。\n  Web・Unityエンジニアの高みを目指すマン。\n\n  家庭の事情により、リモートで働ける環境に転職が必要となり\n  絶賛転職活動中。\n\n  ==================================================\n  `,\n  skills: `\n  ==================================================\n\n  Language      Level(1 ~ 10)\n  <span class=\"html\">HTML</span>        : <span class=\"skill-val\">+++++++</span>\n  <span class=\"css\">CSS</span>         : <span class=\"skill-val\">+++++++</span>\n  <span class=\"ruby\">Ruby</span>        : <span class=\"skill-val\">+++++++</span>\n  <span class=\"js\">Javascript</span>  : <span class=\"skill-val\">++++++</span>\n  <span class=\"ts\">Typescript</span>  : <span class=\"skill-val\">++++++</span>\n  <span class=\"jquery\">jQuery</span>      : <span class=\"skill-val\">++++</span>\n  <span class=\"react\">React</span>       : <span class=\"skill-val\">+++++</span>\n  <span class=\"cs\">C#</span>          : <span class=\"skill-val\">++++</span>\n  <span class=\"php\">PHP</span>         : <span class=\"skill-val\">++++</span>\n\n  Framework     Level(1 ~ 10)\n  <span class=\"rails\">Rails</span>       : <span class=\"skill-val\">++++++</span>\n  <span class=\"unity\">Unity</span>       : <span class=\"skill-val\">++++</span>\n  <span class=\"php\">FuelPHP</span>     : <span class=\"skill-val\">++</span>\n  <span class=\"php\">CakePHP</span>     : <span class=\"skill-val\">+</span>\n\n  ==================================================\n  `,\n  products: `\n  ==================================================\n\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://draftbox.herokuapp.com\"><img class=\"product-img\" src=\"./images/draftbox.png\"></a>\n  title: <strong>DraftBox</strong>\n  url: <a class=\"terminal-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://draftbox.herokuapp.com/\">https://draftbox.herokuapp.com/</a>\n  backend: [<span class=\"rails\">\"Rails\"</span>, <span class=\"heroku\">\"Heroku\"</span>]\n  frontend: [<span class=\"jquery\">\"jQuery\"</span>, \"Marked.js\"]\n  description: オンラインMarkdownメモサービス。\n                自分専用に開発したため、バグ多。\n\n  --------------------------------------------------\n\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twesumes.net\"><img class=\"product-img\" src=\"./images/twesume.png\"></a>\n  title: <strong>TWESUME ~ みんなのTwitter履歴書 ~</strong>\n  url: <a class=\"terminal-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twesumes.net\">https://twesumes.net/</a>\n  period: Oct 8, 2018 ->\n  backend: [<span class=\"rails\">\"Rails\"</span>, <span class=\"heroku\">\"Heroku\"</span>]\n  frontend: [<span class=\"jquery\">\"jQuery\"</span>, <span class=\"bootstrap\">\"Bootstrap\"</span>, <span class=\"html2canvas\">\"html2canvas\"</span>]\n  description: ポートフォリオでアピールするTwitter転職支援サービス。\n                Twitter転職が流行っていたので開発。\n\n  ==================================================\n  `,\n  blogs: `\n  ==================================================\n\n  blogs text\n\n  ==================================================\n  `,\n  contact: `\n  ==================================================\n\n  お問い合わせは\n\n  <a class=\"terminal-link\" href=\"https://twitter.com/dashi296\">Twitterアカウント(@dashi296)</a>\n\n  のDMへお願いいたします。\n\n  ==================================================\n  `,\n};\n\nexport default TerminalData;\n","import { Reducer } from 'redux';\n\nimport { MenuAction } from './actions';\n\nimport * as ActionType from './constants';\n\nimport EditorData from '../data/editor';\nimport TerminalData from '../data/terminal';\n\nexport interface IMenuState {\n  isSetting: boolean;\n  menuName: string;\n  settingMenuName: string;\n  editorCode: string;\n  prevTerminalText: string;\n  menuResult: string;\n}\n\nexport const initialState: IMenuState = {\n  isSetting: false,\n  menuName: \"\",\n  settingMenuName: \"\",\n  editorCode: \"\",\n  prevTerminalText: \"\",\n  menuResult: \"\",\n};\n\nconst menuReducer: Reducer<IMenuState, MenuAction> = (\n  state: IMenuState = initialState,\n  action: MenuAction,\n): IMenuState => {\n  switch (action.type) {\n    case ActionType.SET_MENU: {\n      const { menuName } = action.payload.params;\n      const editorCode = EditorData[menuName];\n\n      return {\n        ...state,\n        isSetting: true,\n        menuName: menuName,\n        settingMenuName: menuName,\n        editorCode: editorCode,\n      };\n    }\n\n    case ActionType.UPDATE_TERMINAL: {\n      const { menuName } = action.payload.params;\n\n      const execCode = `ruby ${menuName}.rb`\n      const terminalPhrase = \"dashi-MBP:portfolio dashi$ \";\n      const menuResult = TerminalData[menuName];\n      const prevTerminalText = (state.prevTerminalText + terminalPhrase + execCode + menuResult).trim() + \"\\n\";\n      return {\n        ...state,\n        isSetting: false,\n        settingMenuName: \"\",\n        prevTerminalText: prevTerminalText,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default menuReducer;\n","import { createStore, combineReducers, compose } from 'redux';\nimport menuReducer from './menus/reducers';\n\n//for Redux DevTools\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers({\n    menu: menuReducer,\n  }), composeEnhancers()\n);\n\nexport default store;\n\nexport type AppState = ReturnType<typeof store.getState>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}